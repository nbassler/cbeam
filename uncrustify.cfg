# See
# https://raw.githubusercontent.com/uncrustify/uncrustify/master/documentation/htdocs/ben.cfg.txt
# for inspiration.

code_width              = 120
newlines                = LF

utf8_byte               = false
utf8_force              = false

input_tab_size          = 4
output_tab_size         = 4

indent_with_tabs        = 0
indent_columns          = 4

indent_cmt_with_tabs    = false
align_with_tabs         = false
align_keep_tabs         = false
align_on_tabstop        = false

nl_max                  = 3
nl_after_func_body      = 3

## Newline After

# Newline after brace close
nl_after_brace_close                    = false         # boolean (false/true)

# Newline after brace open
nl_after_brace_open                     = false         # boolean (false/true)

# Newline after case statement
nl_after_case                           = false         # boolean (false/true)

# Newline after do
nl_after_do                             = add           # string (add/force/ignore/remove)

# Newline after for
nl_after_for                            = add           # string (add/force/ignore/remove)

# Newline after semicolon
nl_after_semicolon                      = true          # boolean (false/true)

# Newline after switch
nl_after_switch                         = add           # string (add/force/ignore/remove)

# Newline after while
nl_after_while                          = add           # string (add/force/ignore/remove)

## Newline Before

# Newline before case statement
nl_before_case                          = true          # boolean (false/true)

# Newline before do
nl_before_do                            = add           # string (add/force/ignore/remove)

# Newline before for
nl_before_for                           = add           # string (add/force/ignore/remove)

# Newline before if
nl_before_if                            = ignore        # string (add/force/ignore/remove)

# Newline before return
nl_before_return                        = false         # boolean (false/true)

# Newline before switch
nl_before_switch                        = add           # string (add/force/ignore/remove)

# Newline before throw
nl_before_throw                         = ignore        # string (add/force/ignore/remove)

# Newline before while
nl_before_while                         = add           # string (add/force/ignore/remove)

## Newline Between

# Newline between case colon and open brace
nl_case_colon_brace                     = remove        # string (add/force/ignore/remove)

# Newline between catch and open brace
nl_catch_brace                          = remove        # string (add/force/ignore/remove)

# Newline between close brace and catch
nl_brace_catch                          = force         # string (add/force/ignore/remove)

# Newline between close brace and else
nl_brace_else                           = force         # string (add/force/ignore/remove)

# Newline between close brace and finally
nl_brace_finally                        = force         # string (add/force/ignore/remove)

# Newline between close brace and variable in struct/enum/union
nl_brace_struct_var                     = remove        # string (add/force/ignore/remove)

# Newline between close brace and while
nl_brace_while                          = remove        # string (add/force/ignore/remove)

# Newline between close parenthesis and open brace in multi line conditional
nl_multi_line_cond                      = false         # boolean (false/true)

# Newline between do and open brace
nl_do_brace                             = remove        # string (add/force/ignore/remove)

# Newline between else and if
nl_else_if                              = remove        # string (add/force/ignore/remove)

# Newline between else and open brace
nl_else_brace                           = remove        # string (add/force/ignore/remove)

# Newline between else if and open brace
nl_elseif_brace                         = remove        # string (add/force/ignore/remove)

# Newline between enum and open brace
nl_enum_brace                           = remove        # string (add/force/ignore/remove)

# Newline between finally and open brace
nl_finally_brace                        = remove        # string (add/force/ignore/remove)

# Newline between for and open brace
nl_for_brace                            = remove        # string (add/force/ignore/remove)

# Newline between function signature and open brace
nl_fdef_brace                           = force         # string (add/force/ignore/remove)

# Newline between if and open brace
nl_if_brace                             = remove        # string (add/force/ignore/remove)

# Newline between return and expression
nl_return_expr                          = remove        # string (add/force/ignore/remove)

# Newline between return type and function name
nl_func_type_name                       = remove        # string (add/force/ignore/remove)

# Newline between return type and function name in prototype
nl_func_proto_type_name                 = remove        # string (add/force/ignore/remove)

# Newline between struct and open brace
nl_struct_brace                         = remove        # string (add/force/ignore/remove)

# Newline between switch and open brace
nl_switch_brace                         = remove        # string (add/force/ignore/remove)

# Newline between try and open brace
nl_try_brace                            = remove        # string (add/force/ignore/remove)

# Newline between union and open brace
nl_union_brace                          = remove        # string (add/force/ignore/remove)

# Newline between while and open brace
nl_while_brace                          = remove        # string (add/force/ignore/remove)

## Other

# Alter newlines in #define macros
nl_define_macro                         = false         # boolean (false/true)

# Newline count at end of file
nl_end_of_file_min                      = 1             # number

# Newlines at end of file
nl_end_of_file                          = force         # string (add/force/ignore/remove)

# Newlines at start of file
nl_start_of_file                        = remove        # string (add/force/ignore/remove)

# Place ObjC message parameters on new lines
nl_oc_msg_args                          = false         # boolean (false/true)

#
# Spacing options
#
# Add or remove space around arithmetic operator '+', '-', '/', '*', etc
sp_arith                                 = add   # ignore/add/remove/force

# Add or remove space around assignment operator '=', '+=', etc
sp_assign                                = add   # ignore/add/remove/force
